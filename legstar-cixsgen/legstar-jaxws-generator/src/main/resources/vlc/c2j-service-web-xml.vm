##/////////////////////////////////////////////////////////////////////
##J2EE web.xml Template.
##@author Fady
##/////////////////////////////////////////////////////////////////////
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" id="WebApp_ID" version="2.5">
    <servlet>
        <description>${model.name}Proxy is a proxy for ${proxyTargetType.toString()} ${model.name}</description>
        <display-name>${model.name}Proxy</display-name>
        <servlet-name>${model.name}Proxy</servlet-name>
        <servlet-class>com.legstar.c2ws.servlet.C2wsProxy</servlet-class>
        <!--  ============================ -->
        <!--  Parameters for Service Proxy -->
        <!--  ============================ -->
        <init-param>
            <description>Operation proxy class name</description>
            <param-name>operationProxyClassName</param-name>
            <param-value>com.legstar.proxy.invoke.DirectOperationProxy</param-value>
        </init-param>
#foreach ($cixsOperation in ${model.cixsOperations})
        <!--  ===================================== -->
        <!--  Parameters for Direct Operation Proxy -->
        <!--  ===================================== -->
        <init-param>
            <description>Host character set</description>
            <param-name>hostCharset</param-name>
            <param-value>${hostCharset}</param-value>
        </init-param>
#foreach ($cixsStructure in ${cixsOperation.getInput()})
        <init-param>
            <description>Request transformers set</description>
            <param-name>requestTransformersClassName</param-name>
            <param-value>${cixsStructure.coxbPackageName}.${cixsStructure.jaxbType}Transformers</param-value>
        </init-param>
#end
#foreach ($cixsStructure in ${cixsOperation.getOutput()})
        <init-param>
            <description>Response transformers set</description>
            <param-name>responseTransformersClassName</param-name>
            <param-value>${cixsStructure.coxbPackageName}.${cixsStructure.jaxbType}Transformers</param-value>
        </init-param>
#end
#end
#if(${proxyTargetType.equalsIgnoreCase("webservice")})
        <!--  ================================== -->
        <!--  Parameters for Web Service invoker -->
        <!--  ================================== -->
        <init-param>
            <description>Proxy invoker class name</description>
            <param-name>proxyInvokerClassName</param-name>
            <param-value>com.legstar.proxy.invoke.jaxws.WebServiceInvoker</param-value>
        </init-param>
        <init-param>
            <description>URL locating target Web service WSDL</description>
            <param-name>wsdlUrl</param-name>
            <param-value>${wsdlUrl}</param-value>
        </init-param>
        <init-param>
            <description>Target Web service WSDL namespace</description>
            <param-name>wsdlTargetNamespace</param-name>
            <param-value>${wsdlTargetNamespace}</param-value>
        </init-param>
        <init-param>
            <description>Target Web service WSDL port name</description>
            <param-name>wsdlPortName</param-name>
            <param-value>${wsdlPortName}</param-value>
        </init-param>
        <init-param>
            <description>Target Web service WSDL service name</description>
            <param-name>wsdlServiceName</param-name>
            <param-value>${wsdlServiceName}</param-value>
        </init-param>
#foreach ($cixsOperation in ${model.cixsOperations})
#foreach ($cixsStructure in ${cixsOperation.getInput()})
        <init-param>
            <description>Request JAXB type</description>
            <param-name>requestJaxbType</param-name>
            <param-value>${cixsStructure.jaxbType}</param-value>
        </init-param>
        <init-param>
            <description>Request JAXB package name</description>
            <param-name>requestJaxbPackageName</param-name>
            <param-value>${cixsStructure.jaxbPackageName}</param-value>
        </init-param>
#end
#foreach ($cixsStructure in ${cixsOperation.getOutput()})
        <init-param>
            <description>Response JAXB type</description>
            <param-name>responseJaxbType</param-name>
            <param-value>${cixsStructure.jaxbType}</param-value>
        </init-param>
        <init-param>
            <description>Response JAXB package name</description>
            <param-name>responseJaxbPackageName</param-name>
            <param-value>${cixsStructure.jaxbPackageName}</param-value>
        </init-param>
#end
#end
#end
#if(${proxyTargetType.equalsIgnoreCase("pojo")})
        <!--  =========================== -->
        <!--  Parameters for POJO invoker -->
        <!--  =========================== -->
        <init-param>
            <description>Proxy invoker class name</description>
            <param-name>proxyInvokerClassName</param-name>
            <param-value>com.legstar.proxy.invoke.pojo.PojoInvoker</param-value>
        </init-param>
        <init-param>
            <description>POJO Class name</description>
            <param-name>pojoClassName</param-name>
            <param-value>${pojoClassName}</param-value>
        </init-param>
        <init-param>
            <description>POJO method name</description>
            <param-name>pojoMethodName</param-name>
            <param-value>${pojoMethodName}</param-value>
        </init-param>
#end
    </servlet>
    <servlet-mapping>
        <servlet-name>${model.name}Proxy</servlet-name>
        <url-pattern>/${model.name}Proxy</url-pattern>
    </servlet-mapping>
</web-app>