<?xml version="1.0" encoding="UTF-8"?>
<!-- =================================================================================
     Generate a mainframe proxy to a Web Service.
     Artifacts can be used to allow remote Mainframe programs to execute
     a target Web Service operations.
     Prerequisite: COBOL binding classes should have been generated
     using Coxbgen prior to using this script.
     Refer to http://www.legsem.com/legstar for info on generating binding classes.
  -->
<project basedir="." default="generateCixs2Jaxws" name="generate-cixs2jaxws">

    <!-- ===========================================================  -->
    <!-- Setup environment
    -->
    <target name="init">
    
        <property environment="env"/>
        <!-- Service name   -->
        <property name="service" value="@SERVICE-NAME@" />
        
        <!-- Target type to be consumed by mainframe program: POJO or WEBSERVICE.
             Depending on your choice you need to set target specific parameters in
             corresponding elements pojoTargetParameters or webServiceTargetParameters
             below.   -->
        <property name="proxy.target.type" value="@PROXY-TARGET-TYPE@" />

        <!-- Type of sample COBOL client code to generate (DFHWBCLI, WEBAPI, LSHTTAPI)   -->
        <property name="sample.cobol.http.client.type" value="DFHWBCLI" />

        <!-- The input JAXB type name   -->
        <property name="jaxb.root.name.in" value="@JAXB-ROOT-NAME-IN@" />
        <!-- The input JAXB package name  -->
        <property name="jaxb.package.name.in" value="com.legstar.test.coxb.${service}"/>
        <!-- The output JAXB type name   -->
        <property name="jaxb.root.name.out" value="@JAXB-ROOT-NAME-OUT@" />
        <!-- The output JAXB package name  -->
        <property name="jaxb.package.name.out" value="com.legstar.test.coxb.${service}"/>
        
        <!-- Location of JAXB classes   -->
        <property name="jaxb.bin.dir" value="bin"/>
        <!-- Location of COXB binding classes   -->
        <property name="coxb.bin.dir" value="bin"/>
        <!-- Location of custom code classes   -->
        <property name="cust.bin.dir" value="bin"/>
    
        <!-- Generated Ant scripts target location   -->
        <property name="ant.dir" value="ant"/>
        <!-- Distribution archives location   -->
        <property name="dist.dir" value="dist"/>
        <!-- Generated Web descriptors target location   -->
        <property name="wdd.dir" value="webapp/cixs-${service}/WEB-INF"/>
        <!-- Generated COBOL CICS program target location   -->
        <property name="cobol.dir" value="cobol"/>
        <!-- Generated sample COBOL CICS program name   -->
        <property name="cics.program.name" value="@PROGRAM-NAME@" />
        <!-- War files target location   -->
        <property name="war.dir" value="war"/>
    
        <!-- Mainframe character set   -->
        <property name="host.charset" value="IBM01140" />

        <!-- Classpath setting -->
        <path id="classpath">
            <pathelement location="${jaxb.bin.dir}"/>
            <pathelement location="${coxb.bin.dir}"/>
            <pathelement location="${cust.bin.dir}"/>
            <fileset dir="${basedir}/../../.." includes="lib/*.jar" />
        </path>
        
        <!-- Mainframe Proxy Generator ant task -->
        <taskdef name="cixs2jaxwsgen"
            classname="com.legstar.cixs.jaxws.gen.Cixs2JaxwsGenerator"
            classpathref="classpath" 
        /> 
    
    </target>

    <!-- ===========================================================  -->
    <!-- This step creates all the artifacts for a service.  -->
    
    <target name="generateCixs2Jaxws" depends="init">
    
        <cixs2jaxwsgen
            targetAntDir="${ant.dir}"
            targetWDDDir="${wdd.dir}"
            targetDistDir="${dist.dir}"
            targetWarDir="${war.dir}"
            targetCobolDir="${cobol.dir}"
            jaxbBinDir="${jaxb.bin.dir}"
            coxbBinDir="${coxb.bin.dir}"
            custBinDir="${cust.bin.dir}"
            hostCharset="${host.charset}"
            proxyTargetType="${proxy.target.type}"
            sampleCobolHttpClientType="${sample.cobol.http.client.type}"
        >
            <cixsJaxwsService name="${service}"
            >
                <cixsOperation name="${service}"
                    cicsProgramName="${cics.program.name}"
                >
                    <input
                        jaxbType="${jaxb.root.name.in}"
                        jaxbPackageName="${jaxb.package.name.in}"
                    />
                    <output
                        jaxbType="${jaxb.root.name.out}"
                        jaxbPackageName="${jaxb.package.name.out}"
                    />
                </cixsOperation>
            </cixsJaxwsService>
            @TARGET-PARAMETERS@
            
        </cixs2jaxwsgen>
    
    </target>
   
</project>