 -----
 Overview
 -----
 Fady Moussallam
 -----
 -----

JAXWS Service Generator overview

 Service Generator is a development time tool that Service-enable mainframe programs.
 
 The generation features are available as a set of ant tasks.
 
 Service Generator comes with 2 primary features:
 
  * Adapter Generator which exposes mainframe programs as Web Services

  * Proxy Generator which gives mainframe programs outbound access to Web Services or pure java objects (POJOs)
  
 []
 
 Service Generator models mainframe interactions by mapping java-side operations, or methods, to mainframe-side programs.
 A generated Adapter will expose one operation for each mainframe program it adapts. A generated Proxy,
 will expose one Web Service operation, of POJO method, to a mainframe program.
 
 Service Generator models inputs and outputs using Binding classes, which are JAXB classes with COBOL annotations
 (such as generated by {{{http://www.legsem.com/legstar/legstar-core/legstar-coxbgen}COBOL Transformers Generator}}).
 
 Service Generator produces various Java and XML artifacts that you can deploy in J2EE containers such as
 Tomcat or Jetty. In the case of Proxies, it also generate a sample COBOL program.
 
 At runtime, generated artifacts for Adapters will use {{{http://www.legsem.com/legstar/legstar-transport/legstar-invoker}Mainframe Adapter Runtime}} and
 generated artifacts for Proxies will use {{{http://www.legsem.com/legstar/legstar-transport/legstar-c2wsrt}Mainframe Proxy Runtime}}.
 
 This module does not come with a separate distribution because it needs several of the other
 LegStar modules. To get the feature, just download the {{{http://www.legsem.com/legstar/legstar-distribution/} complete LegStar product}}
 and follow installation instructions.  
 
 For answers to common questions about LegStar Cixsgen, see the {{{./faq.html} FAQ}}.
 
