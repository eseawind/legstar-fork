<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN" "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<section id="coxbgen-using-ant-generator-proxy">
<title>COBOL Transformers Generation for a Proxy</title>
<para>
  You can use the <emphasis>build-coxb.xml</emphasis> ant script from the
  samples/quickstarts/proxy_ws_cultureinfo folder
  as your starting point. It generates Transformers for the cultureinfo Web Service which
  takes the GetInfo structure as its input and the GetInfoResponse structure as its output.
</para>
<para>
  Refer to <link linkend="coxbgen-using-ant-generator-adapter">COBOL Transformers Generation for an Adapter</link>
  for a description of what you need to customize in <emphasis>build-coxb.xml</emphasis>
  and how it works.
</para>
<para>
  Assuming you want to customize <emphasis>build-coxb.xml</emphasis> for the Microsoft LIVE search
  SOAP service. Follow these steps: 
</para>
<itemizedlist>
<listitem>
<para>
  Change xsdFile parameter of the jaxbgen ant task to point to the location the XML Schema
  that was produced with the WSDL/XSD Structures Mapping tool.
</para>
</listitem>
<listitem>
<para>
  Change the jaxbPackageName parameter, for both jaxbgen and coxbgen, to something like
  <emphasis>com.microsoft.schemas.msnsearch</emphasis>.
</para>
</listitem>
<listitem>
<para>
  Change the jaxbRootClass parameters to Search and SearchResponse, which are the wrapper
  elements expected and produced by the target LIVE Web Service.
</para>
</listitem>
</itemizedlist>
<para>
  if you execute the ant script as is, you will get a JAXB error:
</para>
<programlisting>
  [ERROR] A class/interface with the same name "com.microsoft.schemas.msnsearch.SearchResponse" is already in use.
</programlisting>
<para>
  This is because Microsoft uses the same names for Complex Types and Elements in their XML Schemas
  which confuses JAXB. To solve this, you can use the typeNameSuffix parameter on the jaxbgen task. The
  Task should now look like this: 
</para>
<programlisting>
<![CDATA[
        <jaxbgen 
            xsdFile="LIVESearch.xsd"
            targetDir="src"
            jaxbPackageName="com.microsoft.schemas.msnsearch"
            generateIsSetMethod="true"
            serializableUid="1"
            typeNameSuffix="Type"
        />
]]>
</programlisting>
<para>
  You can now execute the ant script.
</para>

<para>
  The <link linkend="coxbgen-using-transformers">Using generated tranformers</link> section gives examples
  of code you could write to run Transformers.
</para>

</section>
