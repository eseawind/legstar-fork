<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN" "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<chapter>
<title>Introduction</title>
<section id="coxbgen-overview">
<title>COBOL Transformers Generator overview</title>
<para>
  LegStar COBOL Transformers Generator, (coxbgen for short), is a code generator that produces
  COBOL to Java Transformers.
</para>
<para>
  The COBOL Transformers Generator is available either as ant scripts or as an
  Eclipse plugin.
</para>
<para>
  The major input to the generation process is an XML Schema with COBOL annotations.
  LegStar has 2 tools that generate such XML Schemas:
</para>
<itemizedlist>
<listitem>
<para>
    <ulink url="http://code.google.com/p/legstar-cob2xsd/">COBOL to XML Schema Translator</ulink>:
     used when the starting point is a COBOL structure.
</para>
</listitem>
<listitem>
<para>
    <ulink url="http://code.google.com/p/legstar-xsd2cob/">XML Schema to COBOL Translator</ulink>:
     used when the starting point is a Java class, an XML Schema or a WSDL.
</para>
</listitem>
</itemizedlist>

<section>
<title>How to get it</title>
<para>
  coxbgen is one of the several LegStar modules. As such it is generally easier to download
  the <ulink url="http://www.legsem.com/legstar/legstar-distribution">complete product</ulink>.
</para>
<para>
  However, if you feel comfortable enough, you can also download a standalone distribution
  by following <ulink url="download.html">this link</ulink>.
</para>
<para>
  The COBOL Transformers generator can be installed as an Eclipse plugin. More details
  on this option are available on the
  <ulink url="http://www.legsem.com/legstar/legstar-eclipse/index.html">LegStar Eclipse site</ulink>.
</para>
</section>

<section>
<title>COBOL Transformers</title>
<para>
  Transformers are java classes that you can use to transform mainframe data
  to Java, XML or JSON. These same Transformers can also turn Java objects,
  XML or JSON to mainframe data.
</para>
<para>
  Transformers don't make any assumption on where the mainframe data
  originated from. As far as Transformers are concerned, mainframe
  data is the content of a byte array.
</para>
<para>
  Transformers have detailed knowledge of the mainframe data internal structure
  and can handle a large variety of mainframe data types such as compressed
  numerics, variable size arrays and redefines.
</para>
<para>
  Internally, Transformers use <ulink url="https://jaxb.dev.java.net">JAXB</ulink>
  Coxbgen produces JAXB Classes with COBOL annotations.
  These classes are not different from regular JAXB Classes apart from additional annotations
  providing meta-data to map Java types with COBOL types.
</para>
<para>
  An important class is <ulink url="http://www.legsem.com/legstar/legstar-core/legstar-coxbapi/apidocs/com/legstar/coxb/CobolElement.html">CobolElement</ulink>
  which is a java annotation that represent the mapping between Java properties and a Cobol data elements. 
</para>
<para>
  Transformers use LegStar runtime libraries which provide low-level conversions for simple types such
  as strings, Cobol packed decimals, Cobol zoned decimals, simple arrays, etc.
</para>
</section>

<section>
<title>Learn more</title>
<para>
  For instructions on how to use coxbgen follow <ulink url="legstar-coxbgen-user-guide.html">this link</ulink>.
</para>
<para>
  For answers to common questions about LegStar coxbgen, see the <ulink url="faq.html">FAQ</ulink>.
</para>
</section>

</section>
</chapter>