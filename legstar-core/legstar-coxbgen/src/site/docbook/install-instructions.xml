<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN" "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<chapter>
<title>Standalone Install instructions</title>
<section id="coxbgen-installing-standalone">
<title>Installing COBOL Transformers Generator standalone</title>
<para>
  These instructions apply if you are installing from the coxbgen standalone
  distribution. If you are installing the complete LegStar distribution please
  refer to <ulink url="http://www.legsem.com/legstar/legstar-distribution">legstar distribution</ulink>.
</para>
<para>
  Alternatively, the COBOL Transformers generator can be installed as an Eclipse plugin which
  contains all the necessary components. More details
  on this option are available on the
  <ulink url="http://www.legsem.com/legstar/legstar-eclipse/index.html">LegStar Eclipse site</ulink>.
  However, the plugin does not include the samples. Furthermore, the libraries that you
  would need to run your Transformers are not easily accessible with the plugin so we still
  recommend that you perform a standalone installation as described in this document.
</para>
<section>
<title>Pre-requisites</title>
<para>
  Java 1.5+ and ant 1.6.5+ are both prerequisites for LegStar.

  This module requires a JDK, or an international version of the JRE,
  that includes charsets.jar.

  Make sure JAVA_HOME and ANT_HOME environment variables are set and that
  $JAVA_HOME/bin (%JAVA_HOME%/bin on Windows) and $ANT_HOME/bin (%ANT_HOME%/bin
  on Windows) are both in your system path.
</para>
<para>
  Coxbgen relies on <ulink url="https://jaxb.dev.java.net/">Sun's JAXB</ulink>.
  The JAXB implementation must be at least 2.1 compliant. Such an implementation is part
  of the LegStar distribution.
</para>
<para>
  You will likely need the LegStar tools that generate XML Schemas with COBOL annotations
  as this is the major input to COBOL Transformers generator:
</para>
<itemizedlist>
<listitem>
<para>
    <ulink url="http://code.google.com/p/legstar-cob2xsd/">COBOL to XML Schema Translator</ulink>:
     used when the starting point is a COBOL structure.
</para>
</listitem>
<listitem>
<para>
    <ulink url="http://code.google.com/p/legstar-xsd2cob/">XML Schema to COBOL Translator</ulink>:
     used when the starting point is a Java class, an XML Schema or a WSDL.
</para>
</listitem>
</itemizedlist>
</section>

<section>
<title>Installing</title>
<para>
  Download the latest <ulink url="download.html">coxbgen standalone distribution</ulink>.
</para>
<para>
 Unzip the binary distribution package into the directory of your choice,
 referred to as &lt;installDir&gt; in the following steps.
</para>

<para>
   The directory tree should look like this:
</para>
   
<programlisting>
<![CDATA[
    <installDir>
      |-->LICENSE
      |-->NOTICE
      |-->readme.html
      |--><samples>
          |--><quickstarts>
              |--><adapter_lsfileae>
                  |-->build-jaxb.xml
                  |-->build-coxb.xml
                  |--><schema>
                      |-->lsfileae.xsd
              |--><proxy_pojo_jvmquery>
                  |-->build-jaxb.xml
                  |-->build-coxb.xml
                  |--><src>
                      |-->**/*.java
                  |--><schema>
                      |-->jvmquery.xsd
              |--><proxy_ws_cultureinfo>
                  |-->build-jaxb.xml
                  |-->build-coxb.xml
                  |--><schema>
                      |-->jvmquery.xsd
      |--><lib>
          |-->*.jar

]]>
</programlisting>
<para>
   At this stage, you will probably want to <link linkend="coxbgen-running-ant-samples">run the samples provided</link>
</para>
</section>

<section>
<title>Uninstalling</title>
<para>
  To uninstall, remove the &lt;installDir&gt; folder.
</para>
</section>
</section>

<section id="coxbgen-running-ant-samples">
<title>Running the Transformers ant samples</title>

<section>
<title>Generate Transformers for the lsfileae adapter</title>
<para>
  run command <emphasis>ant -f build-coxb.xml</emphasis> from the
  samples/quickstarts/adapter_lsfileae folder and check the result.
</para>
<para>
  build-coxb.xml uses the sample XML Schema in the schema folder.
  It generates JAXB classes in the src folder in the
  com.legstar.test.coxb.lsfileae package.
</para>
<para>
  The JAXB classes are identical to the classes generated using Sun's
  XJC utility apart from additional Java 5 annotations holding COBOL
  meta-data.
</para>
<para>
  Under the com.legstar.test.coxb.lsfileae.bind package, you
  will find the Transformers classes. They are generated by
  reflecting on the JAXB classes.
</para>
<para>
  The Transformers classes provide a high performance alternative to
  reflecting on the JAXB classes at runtime. They are used by
  higher level LegStar modules.
</para>
</section>

<section>
<title>Generate Transformers for the jvmquery proxy</title>
<para>
  run command <emphasis>ant -f build-coxb.xml</emphasis> from the
  samples/quickstarts/proxy_pojo_jvmquery folder and check the result.
</para>
<para>
  You will notice that there are 2 jaxbRootClass parameters in the
  generateCOXB target. This is because the input and output structures
  from the jvmQuery POJO are different.
</para>
</section>

<section>
<title>Generate Transformers for the cultureinfo proxy</title>
<para>
  run command <emphasis>ant -f build-coxb.xml</emphasis> from the
  samples/quickstarts/proxy_ws_cultureinfo folder and check the result.
</para>
<para>
  You will notice that there are 2 jaxbRootClass parameters in the
  generateCOXB target. This is because the input and output structures
  from the cultureinfo Web service are different.
</para>
</section>

</section>
</chapter>