

package com.legstar.test.coxb.lsfileaq.bind;

import com.legstar.coxb.ICobolBinding;
import com.legstar.coxb.common.CChoiceBinding;
import com.legstar.coxb.ICobolStringBinding;
import com.legstar.coxb.CobolBindingFactory;
import com.legstar.coxb.ICobolBindingFactory;
import com.legstar.coxb.ICobolComplexBinding;
import com.legstar.test.coxb.lsfileaq.Filler49;
import com.legstar.coxb.host.HostException;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

import com.legstar.test.coxb.lsfileaq.Customer;

/**
 * LegStar Binding for Choice element:
 *   LastTransDate
 *   Filler49
 * 
 * Represents a choice between 2 or more elements. A choice maps to a cobol
 * REDEFINES clause exposed as an xs:choice in the corresponding XML schema
 * 
 * This class was generated by LegStar Binding generator.
 */
public class LastTransDateChoiceBinding 
             extends CChoiceBinding {

    /** Alternative binding bound to value object property LastTransDate(String). */
    public ICobolStringBinding _lastTransDate;
    /** Alternative binding bound to value object property Filler49(Filler49). */
    public ICobolComplexBinding _filler49;

    /** Logger. */
    private final Log _log = LogFactory.getLog(getClass());

    /** Binding factory. */
    private static final ICobolBindingFactory BF
        = CobolBindingFactory.getBindingFactory();
    
    /**
     * Constructor for a Choice element.
     * 
     * @param bindingName the identifier for this binding
     * @param parentBinding a reference to the parent binding
     */
    public LastTransDateChoiceBinding(
            final String bindingName,
            final ICobolComplexBinding parentBinding) {
        
        super(bindingName, null, parentBinding);
        initAlternatives();
    }

    /** Creates a binding property for each alternative. */
    private void initAlternatives() {
        if (_log.isDebugEnabled()) {
            _log.debug("Initializing started");
        }
        /* Create binding alternatives instances */

        _lastTransDate = BF.createStringBinding("LastTransDate",
               "LastTransDate", String.class, getParentBinding());
        _lastTransDate.setCobolName("LAST-TRANS-DATE");
        _lastTransDate.setByteLength(8);
        _filler49 = new Filler49Binding("Filler49",
               "Filler49", getParentBinding(), null);
        _filler49.setCobolName("FILLER");
        _filler49.setByteLength(8);
        _filler49.setRedefines("LAST-TRANS-DATE");

        /* Add alternatives to alternatives list */
        addAlternative(_lastTransDate);
        addAlternative(_filler49);
 
        if (_log.isDebugEnabled()) {
            _log.debug("Initializing successful");
        }
    }
 
    /** {@inheritDoc} */
    public void setAlternativesValues() throws HostException {
        Object value;
        value = getCustomer().getLastTransDate();
        if (_log.isDebugEnabled()) {
            _log.debug("Getting value from Value object property "
                    + "LastTransDate"
                    + " value=" + value);
        }
        _lastTransDate.setObjectValue(value);
        value = getCustomer().getFiller49();
        if (_log.isDebugEnabled()) {
            _log.debug("Getting value from Value object property "
                    + "Filler49"
                    + " value=" + value);
        }
        _filler49.setObjectValue(value);

    }
    /** {@inheritDoc} */
    public void setPropertyValue(
            final int index) throws HostException {
        /* Set the Value object property value from binding object */
        ICobolBinding alt = getAlternativesList().get(index);

      /* Alternatives that are not bound to a value object property are ignored.
       * This includes Choices and dynamically generated counters
       * for instance.  */
        if (!alt.isBound()) {
            return;
        }

        Object bindingValue = alt.getObjectValue(alt.getJaxbType());
        if (_log.isDebugEnabled()) {
            _log.debug("Setting value of Value object property "
                    + alt.getJaxbName()
                    + " value=" + bindingValue);
        }
        switch (index) {
        case 0:
            getCustomer().setLastTransDate(
                (String) bindingValue);
            break;
        case 1:
            getCustomer().setFiller49(
                (Filler49) bindingValue);
            break;
        default:
            break;
        }
    }
    
    /** {@inheritDoc} */
    public Object getObjectValue(
            final Class < ? >  type) throws HostException {
        throw new HostException("Attempt to get value from choice binding "
                + getCobolName());
    }

    /** {@inheritDoc} */
    public void setObjectValue(final Object value) throws HostException {
        throw new HostException("Attempt to set value for choice binding "
                + getCobolName());
    }
    
    /** {@inheritDoc} */
    public boolean isSet() {
        /* A Choice is considered set if at least one of its alternatives
         * is set. */
        for (ICobolBinding alt : getAlternativesList()) {
            if (alt.isSet()) {
                return true;
            }
        }
        return false;
    }

    /** {@inheritDoc} */
    public Object getParentValueObject() throws HostException {
        return ((CustomerBinding) getParentBinding()).getCustomer();
    }

    /**
     * @return the Value object bound to the parent of this choice
     * @throws HostException if parent bound Value object cannot be retrieved
     */
    public Customer getCustomer() throws HostException {
        return (Customer) getParentValueObject();
    }
    
}

