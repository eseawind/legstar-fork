<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.legsem.legstar</groupId>
        <artifactId>legstar-eclipse</artifactId>
        <version>1.5.4-SNAPSHOT</version>
    </parent>

    <artifactId>legstar-common-plugin</artifactId>

    <name>LegStar Common Eclipse plugin</name>
    <description>Common Eclipse plugin.</description>

    <dependencies>
    
        <dependency>
            <groupId>com.legsem.legstar</groupId>
            <artifactId>legstar-cob2xsd</artifactId>
            <!-- reduce size of plugin. don't need the full antlr at runtime -->
            <exclusions>
                <exclusion>
                    <groupId>org.antlr</groupId>
                    <artifactId>antlr</artifactId>
                </exclusion>
            </exclusions> 
        </dependency>
        <dependency>
            <groupId>com.legsem.legstar</groupId>
            <artifactId>legstar-xsd2cob</artifactId>
        </dependency>
        <dependency>
            <groupId>com.legsem.legstar</groupId>
            <artifactId>legstar-java2cob</artifactId>
        </dependency>
        <dependency>
            <groupId>com.legsem.legstar</groupId>
            <artifactId>legstar-coxbgen</artifactId>
        </dependency>
        <dependency>
            <groupId>com.legsem.legstar</groupId>
            <artifactId>legstar-jaxws-generator</artifactId>
        </dependency>
        <dependency>
            <groupId>com.legsem.legstar</groupId>
            <artifactId>legstar-codegen</artifactId>
        </dependency>
   
        <!-- Generated Web Services will need this to compile
             correctly. -->
        <dependency>
            <groupId>com.legsem.legstar</groupId>
            <artifactId>legstar-invoker</artifactId>
            <scope>runtime</scope>
        </dependency>
        
        <!-- Eclipse dependencies. -->
        <dependency>
            <groupId>org.eclipse.equinox</groupId>
            <artifactId>org.eclipse.equinox.common</artifactId>
        </dependency>

        <dependency>
            <groupId>org.eclipse.core</groupId>
            <artifactId>org.eclipse.core.runtime</artifactId>
        </dependency>

        <dependency>
            <groupId>org.eclipse.core</groupId>
            <artifactId>org.eclipse.core.resources</artifactId>
        </dependency>

        <dependency>
            <groupId>org.eclipse.jface</groupId>
            <artifactId>org.eclipse.jface</artifactId>
        </dependency>

        <dependency>
            <groupId>org.eclipse.ui</groupId>
            <artifactId>org.eclipse.ui.ide</artifactId>
        </dependency>

        <dependency>
            <groupId>org.eclipse.ui</groupId>
            <artifactId>org.eclipse.ui.workbench</artifactId>
        </dependency>

        <dependency>
            <groupId>org.eclipse.equinox</groupId>
            <artifactId>org.eclipse.equinox.common</artifactId>
        </dependency>

        <dependency>
            <groupId>org.eclipse.equinox</groupId>
            <artifactId>org.eclipse.equinox.preferences</artifactId>
        </dependency>

        <dependency>
            <groupId>org.eclipse.ui</groupId>
            <artifactId>org.eclipse.ui.forms</artifactId>
        </dependency>

        <dependency>
            <groupId>org.eclipse.core</groupId>
            <artifactId>org.eclipse.core.jobs</artifactId>
        </dependency>

        <dependency>
            <groupId>org.eclipse.osgi</groupId>
            <artifactId>org.eclipse.osgi</artifactId>
        </dependency>

        <dependency>
            <groupId>org.eclipse.debug</groupId>
            <artifactId>org.eclipse.debug.core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.eclipse.platform</groupId>
            <artifactId>org.eclipse.platform</artifactId>
        </dependency>

        <dependency>
            <groupId>org.eclipse.jdt</groupId>
            <artifactId>org.eclipse.jdt.core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.eclipse.swt</groupId>
            <artifactId>org.eclipse.swt.win32.win32.x86</artifactId>
        </dependency>

        <dependency>
            <groupId>org.eclipse.ui</groupId>
            <artifactId>org.eclipse.ui.ide</artifactId>
        </dependency>

        <dependency>
            <groupId>org.eclipse.ant</groupId>
            <artifactId>org.eclipse.ant.ui</artifactId>
        </dependency>

        <!-- Used by cixcom plugin -->
        <dependency>
            <groupId>wsdl4j</groupId>
            <artifactId>wsdl4j</artifactId>
        </dependency>

    </dependencies>

    <build>
        <finalName>com.legstar.eclipse.plugin.common_${project.version}</finalName>

        <plugins>
        
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifestFile>META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
      
                <executions>
                    <!-- Cleanup the lib folder before it is filled by dependency plugin. -->
                    <execution>
                        <id>clean-lib-folder</id>
                        <phase>generate-resources</phase>
                        <configuration>
                            <tasks>
                                <mkdir dir="${project.basedir}/lib" />
                                <delete includeemptydirs="true">
                                  <fileset dir="${project.basedir}/lib" includes="**/*" />
                                </delete>
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>

                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <!-- Copy all dependencies to the lib folder where PDE will find them -->
                    <execution>
                        <id>copy-dependencies-for-PDE</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <excludeArtifactIds>log4j,junit,servlet-api</excludeArtifactIds>
                            <includeScope>runtime</includeScope>
                            <outputDirectory>${project.basedir}/lib</outputDirectory>
                        </configuration>
                    </execution>
                    <!-- Copy all dependencies to the lib folder where MAVEN will find them.
                         We avoid using the resources mechanism because we don't want
                         the dependencies to end up in the sources archive. -->
                    <execution>
                        <id>copy-dependencies-for-MAVEN</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <excludeArtifactIds>log4j,junit,servlet-api</excludeArtifactIds>
                            <includeScope>runtime</includeScope>
                            <outputDirectory>${project.build.directory}/classes/lib</outputDirectory>
                        </configuration>
                    </execution>

                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-site-plugin</artifactId>
                <configuration>
                    <generateReports>false</generateReports>
                </configuration>
            </plugin>

        </plugins>
    </build>
    
</project>