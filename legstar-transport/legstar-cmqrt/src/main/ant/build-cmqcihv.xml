<!-- =================================================================================
     This script generates a set of COBOL binding files for the IBM MQCIH header.
 -->
<project basedir="../../../" default="generateCOXB" name="generate-cmqcihv">

    <!-- ===========================================================  -->
    <!-- Setup environment
    -->
    <target name="init">
    
        <xmlproperty file="${basedir}/pom.xml"/>
        <!-- LegStar location -->
        <property name="legstar.home" value="${basedir}/../legstar-distribution/target/test-distro/legstar-distribution-$project.parent.version}" />
        <!-- COBOL source name prefix  -->
        <property name="cobol.name" value="cmqcihv" />
        <!-- Path to the cobol source file   -->
        <property name="cobol.path" value="${basedir}/src/main/zos/cobol/${cobol.name}.cbl" />
        <!-- Target XML schema file name   -->
        <property name="xsd.filename" value="${cobol.name}.xsd" />
        <!-- The JAXB root object name. Binding is for a single complex element.   -->
        <property name="jaxb.root.name" value="Mqcih" />
        <!-- Target directory for generated XML schema file   -->
        <property name="xsd.dir" value="${basedir}/target/schema" />
        <!-- Path to generated XML schema file   -->
        <property name="xsd.path" value="${xsd.dir}/${xsd.filename}" />
        <!-- Target namespace for XML schema   -->
        <property name="jaxb.namespace" value="http://legstar.com/mq/mqcih" />
        <!-- Target package for generated jaxb classes   -->
        <property name="jaxb.package" value="com.legstar.mq.mqcih" />
        <!-- Location of external bindings files   -->
        <property name="bindings.dir" value="${legstar.home}/xjb" />
        <!-- Location for generated JAXB classes   -->
        <property name="jaxb.src.dir" value="${basedir}/src/main/java" />
        <!-- Location for generated JAXB binaries   -->
        <property name="jaxb.bin.dir" value="${basedir}/target/classes" />
        <!-- Whether to fork the java compiler or not   -->
        <property name="javac.fork" value="no" />
      
        <!-- Classpath setting  -->
        <path id="classpath">
            <pathelement location="${basedir}/target/classes"/>
            <fileset dir="${legstar.home}" includes="lib/*.jar" />
        </path>

        <!-- Schema generator ant task  -->
        <taskdef name="schemagen" classname="com.legstar.cob2xsd.task.CobolStructureToXsdTask" classpathref="classpath"/>
    
        <!-- The regular sun JAXB XJC tool ant task  -->
        <taskdef name="xjc" classname="com.sun.tools.xjc.XJC2Task" classpathref="classpath"/>

        <!-- COBOL Binding Generator ant task -->
        <taskdef name="coxbgen" classname="com.legstar.coxb.gen.CoxbBindingGenerator" classpathref="classpath"/>

        <!-- Make sure we have a schema directory -->
        <mkdir dir="${xsd.dir}"/>
    
    </target>

    <!-- ===========================================================  -->
    <!-- Generate XML schema
    -->
    <target name="generateXmlSchema" depends="init">
        <echo message="Generating XML schema for ${cobol.path}" />
        <schemagen
            target="${xsd.dir}/${xsd.filename}"
            targetNamespace="${jaxb.namespace}"
        	addLegStarAnnotations="true"
            jaxbPackageName="${jaxb.package}"
        >
        	<fileset file="${cobol.path}"/>
        </schemagen>
        <echo message="XML Schema successfully generated ${xsd.dir}/${xsd.filename}" />
    </target>
  
    <!-- ===========================================================  -->
    <!-- Generate the JAXB classes source
    -->
    <target name="generateJAXB" depends="generateXmlSchema">
        <echo message="Generating JAXB classes for ${xsd.file}" />
        <xjc schema="${xsd.path}" destdir="${jaxb.src.dir}" extension="true" removeOldOutput="yes">
            <!--COXB xjc plugin extension-->
            <arg value="-Xlegstar-code" />
            <!--Without this option (no validation), out of memory errors -->
            <arg value="-nv" />
            <!-- External XJC bindings directory. Collects all *.xjb files -->
            <arg value="-b" />
            <arg value="${bindings.dir}" />
        </xjc>
    </target>

    <!-- ===========================================================  -->
    <!-- Compile the generated JAXB classes. fork="no" prevents
        the bug on package-info.java
    -->
    <target name="compileJAXB" depends="generateJAXB">
        <javac target="1.5"
            srcdir="${jaxb.src.dir}"
            destdir="${jaxb.bin.dir}"
            classpathref="classpath"
            fork="${javac.fork}"
            includes="com/legstar/mq/mqcih/**"
        />
    </target>

    <!-- ===========================================================  -->
    <!-- Generate binding classes by reflecting on JAXB classes.
    -->
    <target name="generateCOXB" depends="compileJAXB">
        <echo message="Generating binding classes for ${xsd.path}" />
        <coxbgen 
            XsdFile="${xsd.path}"
            JaxbRootObjectName="${jaxb.root.name}"
            targetDir="${jaxb.src.dir}"
        />
    </target>

</project>
