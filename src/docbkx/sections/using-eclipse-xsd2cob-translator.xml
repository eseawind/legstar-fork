<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN" "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<section id="schemagen-using-eclipse-proxy">
<title>WSDL Structures Mapping</title>
<para>
  The process starts by mapping XML schema types, from the target Web Service WSDL, to COBOL data items.
  This is option LegStar->New structures mappingâ€¦ 
</para>
<figure>
<title>Proxy WSDL structures mapping screen select source</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/eclipse-screen-shot-proxy-xsd-structures-mapping-select-source.jpg" format="JPG" scalefit="1" width="100%" contentdepth="100%"/>
</imageobject>
</mediaobject>
</figure>
<para>
  In this use case we select the XSD or WSDL source type since our starting point is a WSDL. As a result,
  the next page will allow you to select a file from your file system or to fetch it directly from the
  internet, which we do here by typing the URL for the Microsoft LIVE Web Service:
  <ulink url="http://soap.search.msn.com/webservices.asmx?wsdl">http://soap.search.msn.com/webservices.asmx?wsdl</ulink>
  and clicking on the go button:
</para>
<figure>
<title>Proxy XSD structures mapping screen editor</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/eclipse-screen-shot-proxy-xsd-structures-mapping-editor.jpg" format="JPG" scalefit="1" width="100%" contentdepth="100%"/>
</imageobject>
</mediaobject>
</figure>
<para>
  At this stage, we are ready to click on the finish button and then edit the generated mapping XML Schema: 
</para>
<figure>
<title>Proxy XSD structures mapping screen results</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/eclipse-screen-shot-proxy-xsd-structures-mapping-result.jpg" format="JPG" scalefit="1" width="100%" contentdepth="100%"/>
</imageobject>
</mediaobject>
</figure>
<para>
  If you have the Eclipse XML Schema Editor installed, you can open the Properties view and select
  the extensions element to show and edit the COBOL attributes.. 
</para>
<para>
  Since we started from a WSDL, a certain number of default COBOL data attributes were assigned. For instance,
  all character strings are 32 characters long. While this might be an acceptable default, it is not always
  the case. In our situation, the application ID (AppID in the SearchRequest complex type) must be 40 characters long. We need to change
  the COBOL picture from X(32) to X(40). 
</para>
</section>
