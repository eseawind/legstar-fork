 -------------------------------------------------------------------------------
                             Latest releases overview
 -------------------------------------------------------------------------------

Version 1.5.3

 Mostly a gathering a various fixes in legstar-core and legstar-cob2xsd.
 
 Here is a list of changes in  {{{https://code.google.com/p/legstar/issues/list?can=1&q=Milestone%3DRelease1.5.3}legstar-core}}.
 
 Here is a list of changes in  {{{https://code.google.com/p/legstar-cob2xsd/issues/list?can=1&q=Milestone%3DRelease0.3.6}legstar-cob2xsd}}.
 
Version 1.5.2

 Bug fixes and a enhancements.
 
 Most of the fixes are in legstar-core.

 Here is {{{http://code.google.com/p/legstar/issues/list?can=1&q=Milestone%3DRelease1.5.2}complete list of changes}}.

Version 1.5.1

 Bug fixes and a enhancements.
 
 Support for a user-defined padding character for Strings. Beware that this has changed the signature for CobolStringSimpleConverter#toHostSingle.
 
 Upgraded from JAXB 2.1.6 to JAXB 2.1.7 and from JAX-WS 2.1.3 to JAX-WS 2.1.4.
 
 Better COBOL generation for legstar-xsd2cob. Here is {{{http://code.google.com/p/legstar-xsd2cob/issues/list?can=1&q=Milestone%3DRelease0.2.1} a list of changes}}.
 
 A few long awaiting bug fixes for legstar-cob2xsd. Here is {{{http://code.google.com/p/legstar-cob2xsd/issues/list?can=1&q=Milestone%3DRelease0.3.4} the list}}. Beware that com.legstar.cob2xsd.task.CobolStructureToXsdTask has been renamed com.legstar.cob2xsd.Cob2XsdTask.
 
 And for the rest, here is {{{http://code.google.com/p/legstar/issues/list?can=1&q=Milestone%3DRelease1.5.1}complete list of changes}}.

Version 1.5.0

 This is a major new release.
 
 Apart from Eclipse plugins, all LegStar modules have moved to Maven central.
 
 The old legstar-xsdcgen module, known as Complex Types Mapping Generator, has been replaced by {{{http://code.google.com/p/legstar-xsd2cob/}XML Schema to COBOL Translator}}.

 The WebSphere MQ Transport has been rewritten to use JMS instead of the low level WMQ API.
 
 A {{{http://code.google.com/p/legstar/issues/list?can=1&q=Milestone%3DRelease1.5.0}complete list of changes}} is available.

Version 1.4.4

 A series of bug fixes in this release.
 
 Also enhancements to the COBOL Transformers aimed at easing Transformers reuse. This is important when mass transformations are performed and the same Transformers are used over and over again.

 A {{{http://code.google.com/p/legstar/issues/list?can=1&q=Milestone%3DRelease1.4.4}complete list of changes}} is available.

Version 1.4.3

 Introduced new JCL to help with compiling and link-editing z/OS modules. It was previously quite complicated.
 
 Also more cleaning was done in preparation for moving to Maven central. This is still a long term goal though.

 A {{{http://code.google.com/p/legstar/issues/list?can=1&q=Milestone%3DRelease1.4.3}complete list of changes}} is available.

Version 1.4.2

 Mainly a quick bug fix release. {{{http://code.google.com/p/legstar/issues/detail?id=113}Issue 113}} was blocking the {{{http://code.google.com/p/legstar-pdi/}legstar-pdi}} project.
 
 There are also a number of changes with Maven in preparation for a future migration of the Maven repository to {{{https://oss.sonatype.org}Sonatype}}.
 
 A {{{http://code.google.com/p/legstar/issues/list?can=1&q=Milestone%3DRelease1.4.2}complete list of changes}} is available.

Version 1.4.1

 Although not a major release, there are several important changes in this release.
 
 The primary objective was to provide a new {{{./apidocs/com/legstar/coxb/cob2trans/package-summary.html}legstar-cob2trans}} module that generates
 transformers from COBOL in a single step. This brings together legstar-cob2xsd,
 legstar-jaxbgen and legstar-coxbgen. This is targeted at third party tools which
 need to imbed LegStar design time features.
 
 There are performance improvements to the low-level COBOL to java conversions.
 Some {{{http://code.google.com/p/legstar/wiki/COBOLBindingConversionMetrics}new performance figures}} are available.

 A {{{http://code.google.com/p/legstar/issues/list?can=1&q=Milestone%3DRelease1.4.1}complete list of enhancements and bug fixes}} is available.

Version 1.4.0

 This is a major release and represents a large improvement for the COBOL Transformers features.
 
 The term "Transformers" is now being largely used instead of "Binding classes".
 
 This release introduces support for JSON. You can now generate COBOL to JSON Transformers
 in addition to COBOL to java and COBOL to XML.
 
 The documentation has been thoroughly reviewed. The presentation document has been removed.
 There is now a user guide available, both in HTML and PDF form.

 A {{{http://code.google.com/p/legstar/issues/list?can=1&q=Milestone%3DRelease1.4.0}complete list of enhancements and bug fixes}} is available.

Version 1.3.2

 The primary objective of this release is better support for Eclipse Galileo (3.5.x). The Eclipse P2 update mechanism in particular, required important changes in the way we bundle our Eclipse plugins.

 A {{{http://code.google.com/p/legstar/issues/list?can=1&q=Milestone%3DRelease1.3.2}complete list of bug fixes and improvements}} is available.

Version 1.3.1

 A minor improvement over 1.3.0. The primary reason for this release is to
 bundle the latest {{{http://code.google.com/p/legstar-cob2xsd/issues/list?can=1&q=label:Release0.1.0}legstar-cob2xsd version 0.1.0}}
 which solves a number of important issues.

Version 1.3.0

 A major release where the legstar-schemagen module, our COBOL to XML Schema translator,
 which was written in C, has been replaced by the brand new
 {{{http://code.google.com/p/legstar-cob2xsd/}legstar-cob2xsd}}
 module, which is pure Java and uses the {{{http://www.antlr.org/}ANTLR}} parser generator.

 The install is now simpler (as a consequence of previous point), and the
 product works on a larger number of plaforms.
 
 We did our best to stay backward compatible but the XML Schema produced will
 look different from what they used to be. So don't be surprised.
 
 Details about the changes implemented in this release are available
 {{{http://code.google.com/p/legstar/issues/list?can=1&q=label:Milestone-Release1.3.0}here}}.

Version 1.2.6

 Some important refactoring in this release mainly for JAX-WS adapter generation.

 So far we were primarily targeting Sun JAX-WS RI (Metro). In this release, we
 also support {{{http://ws.apache.org/axis2/}Apache AXIS2}}. 
 
 We also reduced the dependencies on Apache Commons Configuration and started
 using configuration beans instead. The idea is to move toward Spring-based
 configuration in a future release.
 
 More stress tests were run against this release. Sources for stress test cases
 and JMeter test plans are available. See {{http://code.google.com/p/legstar/w/list}}
 for results.
 
Version 1.2.5

 This is mainly a bug fixing release with a particular accent on thread safety
 and performances.

 We have systematic load test cases and JMeter plans for all transports (Sockets,
 HTTP and MQ). This complements what was done for the last release at the 
 COBOL conversion/transformation level.
 
Version 1.2.4

 The MQ Transport for Adapters now supports the IBM CICS MQ Bridge. With this
 option, there is no need to install LegStar on the mainframe. There is an
 additional parameter in legstar-invoker-config.xml to support this option.
 When enabled, legstar sends an MQCIH header to the CICS MQ Bridge in addition
 to the raw data expected by the CICS DPL program.
 
 The binding generator now produces XML to Host transformers in addition to
 java to Host transformers. With these, it becomes very simple to process
 XML as an alternative to java value objects.
 
 COBOL PIC G, DISPLAY-1 data items are now fully supported. They map to Strings
 and legstar removes the shift-in/shift-out characters which are not needed in
 this case.
 
 The XML Schema that describes the COBOL binding annotations has been changed.
 It is now located at {{http://www.legsem.com/legstar/xml/cobol-binding-1.0.1.xsd}}.
 The byteLength attribute has been removed and values are now attributes rather
 than elements.

Version 1.2.3

 The major new feature is support for POJO as targets for Proxy Services.
 The Service Generator accepts a POJO classname and method as alternative
 to Web Service WSDL. At runtime, it is assumed the target POJO is in the
 classpath of the Proxy Runtime.
 
 As a consequence, the Mainframe to Web Service Runtime (legstar-c2wsrt) has
 been renamed "Mainframe Proxy Runtime" since it is no longer restricted to
 target Web Services.
 
 Another important change concerning Proxies is that Mainframe clients no
 longer need to use the LegStar HTTP client libraries. You can now use the
 standard CICS HTTP APIs for instance. This means that you no longer need
 to install anything on the z/OS side if you use Proxies only.
   
Version 1.2.2

 This version is aimed at providing better support for other LegStar related 
 projects {{{http://code.google.com/p/legstar-jbossesb/}see LegStar for JBoss ESB}}
 as an example.
 
 There has been several important fixes to the Eclipse plugins. Details are
 available {{{./legstar-common-plugin/changes-report.html}here}}.
 
 An important change is that generated JAXB class names are not suffixed with
 "Type" anymore by default. You can still request a suffix to be appended to
 names but you have to explicitly set a parameter for that now. This change 
 was necessary because our JAXB classes were not compatible with the ones third
 party tools might generate.

Version 1.2.1

 This version is a minor release, primarily aimed at simplifying intallation 
 of ZOS modules.
 
 There is now a complete, separate, zip file for ZOS containing files in
 TSO XMIT format. ZOS system engineers are familiar with this format. With this
 distribution there is no more need to compile individual source files and
 a CICS RDO JCL groups all updates to the CICS CSD.
 
 New Maven reports have been added such as CPD, PMD, FindBugs and Cobertura
 test coverage. The Maven hierarchy has also been revised.
 

Version 1.2.0

 This version is a major release with many enhancements across all the 
 feature set.
 
 The most dramatic changes concern the Eclipse plugins which have been completely
 redesigned.
 
* Redesign of Eclipse Plugins
 
  In addition to mapping COBOL structures to XML schema, it is now possible to
  map XSD/WSDL or Java Classes to COBOL structures. The schema generator plugin allows
  you to select the source type you want to start from.
  
  The result is a mapping XML Schema which maps COBOL data descriptions to
  XML Schema elements using special COBOL annotations.
  
  In addition to generating Web Services Adapters, which expose mainframe programs
  as Web Services, it is now possible to generate Mainframe Proxies which give
  mainframe programs access to remote Web Services.
  
  The ant task launcher has been completely refactored and its use standardized
  across all plugins. All plugins generate ant scripts that are kept in the 
  Eclipse project under a folder that you set in your preferences (default is a
  folder called ant).
  
  The best description of the new Eclipse plugins is the {{{./legstar-user-guide.pdf}presentation document}}.
  
  Information on Eclipse plugins installation can be found {{{./legstar-common-plugin/index.html}here}}.
 
* Java Mapping Generator
 
   {{{./legstar-xsdcgen/index.html}Complex Types Mapping Generator}} now comes with a new ant task
   that takes a set of Java classes and generate a mapping XML Schema. This feature is built
   on Sun's {{{http://java.sun.com/webservices/docs/2.0/jaxb/schemagen.html}JAXB Schemagen}} utility.

* Mainframe Proxies Generator

   {{{./legstar-cixsgen}Web Service Generator}} now comes with a new ant task that creates Servlet proxies
   for target Web Services. This allows mainframe programs, using the
   {{{./legstar-c2wsrt}Mainframe to Web Service Runtime}} to perform outbound calls to Web Services.
   
   One sample provided calls the Live search SOAP API from a CICS program.
 
* Naming changes

   Because the purpose of several generators has changed, it was necessary to adapt the naming.
   The choice of very short names in previous versions has also proven ambiguous.
   This table gives the correspondence between names used in version 1.1.0 and names in version 1.2.3:

*------------------------------------------+---------------------------------------------+
|      <<Name in version 1.1.0>>           |     <<Name in version 1.2.3>>               |
*------------------------------------------+---------------------------------------------+
| XML Schema Generator                     | COBOL Structures Mapping Generator          |
*------------------------------------------+---------------------------------------------+
| XML Schema Annotator                     | Complex Types Mapping Generator             |
*------------------------------------------+---------------------------------------------+
| Binding Generator                        | COBOL Binding Generator                     |
*------------------------------------------+---------------------------------------------+
| JAXB Generator                           | JAXB COBOL Annotator                        |
*------------------------------------------+---------------------------------------------+
| Service Generator                        | Mainframe Service Generator                 |
*------------------------------------------+---------------------------------------------+
| Cobol Generator                          | COBOL Structures Generator                  |
*------------------------------------------+---------------------------------------------+
| Host to Web Service Runtime              | Mainframe Proxy Runtime                     |
*------------------------------------------+---------------------------------------------+
| Pooling engine                           | Connection Pooling Engine                   |
*------------------------------------------+---------------------------------------------+
| Invoker                                  | Mainframe Adapter Runtime                   |
*------------------------------------------+---------------------------------------------+
| Messaging                                | Messaging Protocol                          |
*------------------------------------------+---------------------------------------------+

